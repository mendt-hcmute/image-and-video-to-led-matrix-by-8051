C51 COMPILER V9.01   PROJECT_3                                                             12/12/2023 07:47:48 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE PROJECT_3
OBJECT MODULE PLACED IN .\Objects\Project_3.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE Project_3.c BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\Project_3.lst) OBJEC
                    -T(.\Objects\Project_3.obj)

line level    source

   1          #include<reg51.h>
   2          #include<intrins.h>
   3          #define COMMONPORTS P0
   4          
   5          sbit SRCLK = P3^6;
   6          sbit SER = P3^4;
   7          sbit RCLK = P3^5;
   8          
   9          typedef unsigned char u8;
  10          typedef unsigned int u16;
  11          
  12          bit flag;
  13          u8 revData;
  14          u8 arr[8][8];
  15          u8 size_data_high = 0;  // So luong byte du lieu sau header
  16          u8 size_data_low = 0;   // So luong byte du lieu sau header
  17          u16 size_data = 0;
  18          u8 end_data;
  19          u8 fps = 0;                             //frame per second
  20          u8 i = 0;
  21          u8 ghc595_buf[8]={0x01,0x02,0x04,0x08,0x10,0x20,0x40,0x00};
  22          
  23          u8 code TAB[8]  = {0x7f,0xbf,0xdf,0xef,0xf7,0xfb,0xfd,0xfe};
  24          
  25          void serial_init(void){
  26   1              /*fcrystal = 11.0592MHz*/
  27   1              /*config timer 1*/
  28   1              TMOD = 0x20;
  29   1              TH1 = 0xFD;
  30   1              SCON = 0x50;
  31   1              TR1 = 1;
  32   1              EA = 1;
  33   1              ES = 1;
  34   1      }
  35          
  36          void Hc595SendByte(unsigned char dat)
  37          {
  38   1          unsigned char a;
  39   1          SRCLK=0;
  40   1          RCLK=0;
  41   1          for(a=0;a<8;a++)
  42   1          {
  43   2              SER=dat>>7;
  44   2              dat<<=1;
  45   2      
  46   2              SRCLK=1;
  47   2              _nop_();
  48   2              _nop_();
  49   2              SRCLK=0;    
  50   2          }
  51   1      
  52   1          RCLK=1;
  53   1          _nop_();
  54   1          _nop_();
C51 COMPILER V9.01   PROJECT_3                                                             12/12/2023 07:47:48 PAGE 2   

  55   1          RCLK=0;
  56   1      }
  57          
  58          void delayMS(unsigned int time)
  59          {
  60   1              int i, j;
  61   1              for(i = 0; i < time; i++)
  62   1                      for(j = 0; j < 123; j++) {}
  63   1      }
  64          void test(void)
  65          {
  66   1              u8 i;
  67   1              for(i=0;i<8;i++)
  68   1              {       
  69   2                      Hc595SendByte(0x00);
  70   2                      Hc595SendByte(ghc595_buf[i]);
  71   2                      delayMS(100);   
  72   2              }
  73   1      }
  74          /*
  75          void serial_Send(u8 x) {
  76                  SBUF = x;
  77                  while(TI == 0); //wait until transmiting completed
  78                  TI = 0;
  79          }
  80          void serial_Send_String(u8 x[]) {
  81              u8 i = 0;
  82              // Loop until null character is encountered
  83              while (x[i] != '\0') {
  84                  serial_Send(x[i]);
  85                  i++;
  86              }
  87          }
  88          */
  89          void create_array()
  90          {
  91   1              u16 i, j;
  92   1              u8 number_of_frame;
  93   1              size_data = (u16)((size_data_high << 8) | size_data_low);
  94   1              number_of_frame = size_data/8;
  95   1              for(i = 0; i < number_of_frame; i++)
  96   1              {
  97   2                      for(j = 0; j < 8; j++)
  98   2                      if(flag == 1)
  99   2                      {
 100   3                              flag = 0;
 101   3                              arr[i][j] = revData;
 102   3                              while(RI == 0);
 103   3                      }
 104   2              }
 105   1              end_data = revData;
 106   1              flag = 0;               
 107   1      }
 108          
 109          void display_to_matrix_led(void)
 110          {
 111   1              u8 tab, i, k, number_of_frame;
 112   1              number_of_frame = size_data/8;
 113   1              for(i = 0; i < number_of_frame; i++)
 114   1              {
 115   2                      k = 0;
 116   2                      while(k < fps)
C51 COMPILER V9.01   PROJECT_3                                                             12/12/2023 07:47:48 PAGE 3   

 117   2                      {
 118   3                      for(tab=0;tab<8;tab++)
 119   3                      {
 120   4                              Hc595SendByte(0x00); 
 121   4                              COMMONPORTS = TAB[tab];             
 122   4                              Hc595SendByte(arr[i][tab]);    
 123   4                              delayMS(2);     
 124   4                      }
 125   3                      k++;
 126   3                      }
 127   2                      if(i >= number_of_frame - 1) i = -1;
 128   2              }
 129   1              
 130   1      }
 131          
 132          void read_size_and_fps(void)
 133          {
 134   1              if(flag == 1)
 135   1              {
 136   2                      flag = 0;
 137   2                      size_data_low = revData;
 138   2                      while(RI == 0);
 139   2                      if(flag == 1)
 140   2                      {
 141   3                              flag = 0;
 142   3                              size_data_high = revData;
 143   3                              
 144   3                              while(RI == 0);
 145   3                              if(flag == 1)
 146   3                              {
 147   4                                      flag = 0;
 148   4                                      fps = revData;
 149   4                                      while(RI == 0);
 150   4                              }
 151   3                      }
 152   2              }
 153   1      }
 154          
 155          void serial_ISR(void) interrupt 4
 156          {
 157   1              if(RI == 1) {
 158   2                      revData = SBUF;
 159   2                      RI = 0;
 160   2                      flag = 1;
 161   2              }
 162   1              //if (TI == 1) ... only use when need interrupT for sending dataa
 163   1      }
 164          u8 is_header()
 165          {
 166   1              if(flag == 1)
 167   1              {
 168   2                      if(revData == '*')
 169   2                      {
 170   3                              flag = 0;
 171   3                              while(RI == 0);
 172   3                              if(revData == '*')
 173   3                              {
 174   4                                      flag = 0;
 175   4                                      while(RI == 0);
 176   4                                      return 1;
 177   4                              }
 178   3                      }
C51 COMPILER V9.01   PROJECT_3                                                             12/12/2023 07:47:48 PAGE 4   

 179   2              }
 180   1              return 0;
 181   1      }
 182          
 183          void main(void)
 184          {
 185   1              COMMONPORTS = 0x00;
 186   1              serial_init();
 187   1              test();
 188   1              COMMONPORTS = 0x00;
 189   1              while(1)
 190   1              {
 191   2                      if(is_header())
 192   2                      {
 193   3                              read_size_and_fps();
 194   3                              create_array();
 195   3                              if(end_data == '*')
 196   3                              {
 197   4                                      display_to_matrix_led();
 198   4                              }
 199   3                      }
 200   2              }
 201   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    402    ----
   CONSTANT SIZE    =      8    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     80       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
